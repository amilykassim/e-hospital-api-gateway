apiVersion: v1
kind: Service
metadata:
  labels:
    env: dev  # TODO: Replace environment. [prod / env]
    version: v1  # TODO: Replace major version
    app: sms-api # TODO: Replace app name 
    project: sms  # TODO: Replace project name 
    revision: dev_v1.53 # TODO: Replace environment. [prod / env], major and minor version 
    service: sms-api # TODO: Replace app name 
  name: sms-api-service-dev # TODO: Replace app name  and environment
  namespace: sms-domain-dev #  TODO: Replace namespace. See doc for options.  
spec:
  type: ClusterIP
  ports:
  - port: 3000  # TODO: customise port
    name: http
    targetPort: 3000  # TODO: customise port
    protocol: TCP
  selector:
    env: dev  # TODO: Replace environment. [prod / env]
    version: v1  # TODO: Replace major version
    app: sms-api # TODO: Replace app name 
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sms-api-account # TODO: Replace app name
  namespace: sms-domain-dev #  TODO: Replace namespace. See doc for options.  
  labels:
    env: dev  # TODO: Replace environment. [prod / env]
    version: v1  # TODO: Replace major version
    account: sms-api # TODO: Replace app name 
    project: sms  # TODO: Replace project name
---
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    env: dev  # TODO: Replace environment. [prod / env]
    version: v1 # TODO: Replace major version
    app: sms-api # TODO: Replace app name 
    project: sms # TODO: Replace project name 
    revision: dev_v1.53 # TODO: Replace environment. [prod / env], major and minor version 
    deployment: sms-api # TODO: Replace app name 
  name: sms-api-deployment-dev # TODO: Replace app name  and environment
  namespace: sms-domain-dev #  TODO: Replace namespace. See doc for options. 
spec:
  replicas: 1  # TODO: Replace number of replicas
  selector:
    matchLabels:
      env: dev  # TODO: Replace environment. [prod / env]
      version: v1  # TODO: Replace major version
      app: sms-api # TODO: Replace app name 
  template:
    metadata:
      labels:
        env: dev  # TODO: Replace environment. [prod / env]
        version: v1  # TODO: Replace major version
        app: sms-api # TODO: Replace app name 
        revision: dev_v1.53 # TODO: Replace environment. [prod / env], major and minor version 
    spec:
      serviceAccountName: sms-api-account  # TODO: Replace app name
      imagePullSecrets:
      - name: us-east-1-ecr-registry
      containers:  
      - image: 126480227765.dkr.ecr.us-east-1.amazonaws.com/sms-api:dev_v1.53  # TODO: Replace app name, environment, major and minor version.
        name: sms-api-container  # TODO: Replace app name.
        ports:
        - containerPort: 3000 # TODO: replace with container port
        resources:
          requests:
            cpu: "100m"
            memory: 300Mi
          limits:
            memory: 1Gi
        # list of environment variables. view example below.
        env:
          # - name: KAFKA_EXPORTER_LOGGING
          #   value: info
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  namespace: sms-domain-dev #  TODO: Replace namespace. See doc for options.
  name: sms-api-virtual-service-dev # TODO: Replace app name  and environment
  labels:
    env: dev  # TODO: Replace environment. [prod / env]  
    version: v1  # TODO: Replace major version  
    app: sms-api # TODO: Replace app name
    virtualservice: sms-api  # TODO: Replace app name
spec:
  hosts:
  - sms-api.staging.oltranz.com  # TODO: replace with URL used to access service. Must have DNS record. 
  gateways:
   # TODO: Uncomment appropriate gateway.  See doc for all options.
  - istio-system/dev-star-ingress-gateway # for *.oltranz.com URLS
  # - istio-system/endpoint-star-ingress-gateway # for *.endpoint.oltranz.com URLS.
  http:
  - match:
    - uri:
        prefix: / 
    route:
    - destination:
        host: "sms-api-service-dev.sms-domain-dev.svc.cluster.local"  # TODO: replace service name, env and namespace
        port:
          number: 3000 # TODO: replace with container port
